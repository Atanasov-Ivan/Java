
public class Rectangle {
	
	public Rectangle(){
		iX1 = iY1 = iX2 = iY2 = 0;
	}
	
	public Rectangle(int x1, int y1, int x2, int y2){
		iX1 = x1;
		iY1 = y1;
		iX2 = x2;
		iY2 = y2;
	}
	
	public int getIX1(){
		return iX1;
	}
	
	public int getIX2(){
		return iX2;
	}
	
	public int getIY1(){
		return iY1;
	}
	
	public int getIY2(){
		return iY2;
	}
	
	public int calcArea(){
		return (Math.abs(iX2-iX1))*(Math.abs(iY2-iY1));
	}
	
	public int compareTo(Rectangle r){
		if(this.calcArea() < r.calcArea())
			return 1;
		else if(this.calcArea() > r.calcArea())
			return -1;
		else return 0;
	}
	
	public boolean equals(Rectangle r){
		return (this.calcArea() == r.calcArea());
	}
	
	public void translateY(int iPoints){
		iY1 += iPoints;
		iY2 += iPoints;
	}
	
	public void translateXY(int iPoints){
		iX1 += iPoints;
		iX2 += iPoints;
		iY1 += iPoints;
		iY2 += iPoints;
	}
	
	public void translateX(int iPoints){
		iX1 += iPoints;
		iX2 += iPoints;
	}
	
	public boolean isInside(int ptX, int ptY ){
		return (iX1 > ptX && ptX < iX2 && iY1 > ptY && ptY < iY2);
	}
	
	public String toString(){
		return "X1: " + iX1 + ", X2:"+iX2+", Y1:"+ iY1 + ", Y2:"+iY2;
	}
	
	public Rectangle unionRect(Rectangle r) {
		Rectangle rec = new Rectangle();
		if(this.iX1 < r.iX1){
			rec.iX1 = this.iX1;
			rec.iX2 = r.iX2;
		}
		else{
			rec.iX1 = r.iX1;
			rec.iX2 = this.iX2;
		}
		if(this.iY1 < r.iY1){
			rec.iY1 = this.iY1;
			rec.iY2 = r.iY2;
		}
		else{
			rec.iY1 = r.iY1;
			rec.iY2 = this.iY2;
		}
		return rec;
	}
	
	public static void main(String[] args) {
		Rectangle r1 =  new Rectangle(2, 2, 4, 4);
		Rectangle r2 = new Rectangle(5, 5, 7, 7);
		System.out.println(r1.toString() + "\n");
		System.out.println(r2.toString() + "\n");
		r2.translateXY(2);
		Rectangle r3 = r1.unionRect(r2);
		System.out.println(r3.toString() + "\n");
	}
	
	
	private int iX1, iY1, iX2, iY2;
}

